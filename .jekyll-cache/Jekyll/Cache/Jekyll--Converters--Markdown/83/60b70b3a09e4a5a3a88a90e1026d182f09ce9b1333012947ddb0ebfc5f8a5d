I"m,<h1 id="타입스크립트-기초---변수와-함수-타입-정의하기">타입스크립트 기초 - 변수와 함수 타입 정의하기</h1>

<h2 id="1-기본-타입">1. 기본 타입</h2>

<hr />

<h3 id="타입스크립트-기본-타입-12가지">타입스크립트 기본 타입 12가지</h3>

<ul>
  <li>Boolean</li>
  <li>Number</li>
  <li>String</li>
  <li>Object</li>
  <li>Array</li>
  <li>Tuple</li>
  <li>Enum</li>
  <li>Any</li>
  <li>Void</li>
  <li>Null</li>
  <li>Undefined</li>
  <li>Never</li>
</ul>

<hr />

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">:</code> 를 이용하여 자바스크립트 코드에 타입을 정의하는 방식을 타입 표기(Type Annotation)라고 한다.</p>
</blockquote>

<hr />

<blockquote>
  <h3 id="ts-문자열">TS 문자열</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">str</span><span class="p">:</span> <span class="kr">string</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<blockquote>
  <h3 id="ts-숫자">TS 숫자</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">num</span><span class="p">:</span> <span class="kr">number</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</code></pre></div></div>

<blockquote>
  <h3 id="ts-배열">TS 배열</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// TS 배열 선언 방법 2가지</span>
<span class="kd">let</span> <span class="nx">arr</span><span class="p">:</span> <span class="nb">Array</span><span class="o">&lt;</span><span class="kr">number</span><span class="o">&gt;</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span> <span class="c1">// 숫자 외 타입 들어가면 오류 뜸</span>
<span class="kd">let</span> <span class="nx">arr2</span><span class="p">:</span> <span class="kr">number</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>

<span class="kd">let</span> <span class="nx">heroes</span><span class="p">:</span> <span class="nb">Array</span><span class="o">&lt;</span><span class="kr">string</span><span class="o">&gt;</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">Capt</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Thor</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">Hulk</span><span class="dl">"</span><span class="p">];</span> <span class="c1">//문자열 외 타입 들어가면 오류 뜸</span>
</code></pre></div></div>

<blockquote>
  <h3 id="ts-튜플">TS 튜플</h3>
</blockquote>

<blockquote>
  <blockquote>
    <p>튜플 : 배열의 길이가 고정되고 각 요소의 타입이 지정되어 있는 배열 형식을 의미</p>
  </blockquote>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">address</span><span class="p">:</span> <span class="p">[</span><span class="kr">string</span><span class="p">,</span> <span class="kr">number</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">gangnam</span><span class="dl">"</span><span class="p">,</span> <span class="mi">100</span><span class="p">];</span>
</code></pre></div></div>

<blockquote>
  <h3 id="ts-객체">TS 객체</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// object로 객체로 인정되나, 속성에 어떤 값이 들어가도 가능한 상태</span>
<span class="kd">let</span> <span class="nx">obj</span><span class="p">:</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{};</span>
<span class="c1">// let person: object = {</span>
<span class="c1">//   name: "capt",</span>
<span class="c1">//   age: 100,</span>
<span class="c1">// };</span>

<span class="c1">// 객체 속성에 타입을 설정</span>
<span class="kd">let</span> <span class="nx">person</span><span class="p">:</span> <span class="p">{</span> <span class="nl">name</span><span class="p">:</span> <span class="kr">string</span><span class="p">;</span> <span class="nl">age</span><span class="p">:</span> <span class="kr">number</span> <span class="p">}</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">thor</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">age</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>
<span class="p">};</span>
</code></pre></div></div>

<blockquote>
  <h3 id="ts-진위값">TS 진위값</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">show</span><span class="p">:</span> <span class="nx">boolean</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</code></pre></div></div>

<hr />

<h2 id="2-함수">2. 함수</h2>

<hr />

<blockquote>
  <h3 id="함수에-타입을-정의하는-방식">함수에 타입을 정의하는 방식</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span><span class="p">:</span> <span class="kr">number</span><span class="p">,</span> <span class="nx">b</span><span class="p">:</span> <span class="kr">number</span><span class="p">):</span> <span class="kr">number</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">);</span> <span class="c1">// 30</span>

<span class="c1">// 여러개의 파라미터를 날릴 수 있는 JS 랑 다르게 파라미터를 제한하는 특성!</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span> <span class="c1">// error, too many parameters</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span> <span class="c1">// error, too few parameters</span>
</code></pre></div></div>

<blockquote>
  <h3 id="함수의-반환-값에-타입을-정의하는-방식">함수의 반환 값에 타입을 정의하는 방식</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 반환 값이 없거나 숫자가 아니면 오류</span>
<span class="kd">function</span> <span class="nx">add</span><span class="p">():</span> <span class="kr">number</span> <span class="p">{</span>
  <span class="k">return</span> <span class="mi">10</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <h3 id="함수의-옵셔널-파라미터">함수의 옵셔널 파라미터</h3>
</blockquote>

<ul>
  <li>JS의 파라미터를 제한하지 않는 자유로운 특성을 살리고 싶다면 <code class="language-plaintext highlighter-rouge">?</code> 사용해서 정의</li>
</ul>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 파리미터? -&gt; 선택적으로 사용 or 생략 가능</span>
<span class="kd">function</span> <span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">:</span> <span class="kr">string</span><span class="p">,</span> <span class="nx">b</span><span class="p">?:</span> <span class="kr">string</span><span class="p">,</span> <span class="nx">c</span><span class="p">?:</span> <span class="kr">string</span><span class="p">)</span> <span class="p">{}</span>
<span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello world</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello ts</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">abc</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div>

<blockquote>
  <h3 id="그-외-매개변수-초기화---es6-문법과-동일">그 외 매개변수 초기화 - ES6 문법과 동일</h3>
</blockquote>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span><span class="p">:</span> <span class="kr">number</span><span class="p">,</span> <span class="nx">b</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">100</span><span class="dl">"</span><span class="p">):</span> <span class="kr">number</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span><span class="p">;</span>
<span class="p">}</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="kc">undefined</span><span class="p">);</span> <span class="c1">// 110</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span> <span class="c1">// error, too many parameters</span>
<span class="nx">sum</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span> <span class="c1">// 110</span>
</code></pre></div></div>

<hr />

<p><br />
<br />
<br /></p>

<blockquote>
  <h3 id="reference">Reference</h3>

  <p>본 포스팅은 아래 사이트를 참조 및 인용하여 개인공부 용도로 작성되었습니다.<br />
<a href="https://joshua1988.github.io/ts/intro.html">타입스크립트 핸드북</a></p>
</blockquote>

<p><br />
<br />
<br /></p>

<blockquote>
  <p><strong>Reference</strong><br />
본 포스팅은 아래 사이트를 참조 및 인용하여 개인공부 용도로 작성되었습니다.<br />
잘못된 내용 피드백 주시면 반영하겠습니다. 감사합니다.<br />
<a href=""></a></p>
</blockquote>
:ET