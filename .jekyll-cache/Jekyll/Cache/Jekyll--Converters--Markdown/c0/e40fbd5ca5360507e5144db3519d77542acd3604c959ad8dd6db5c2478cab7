I"<p><br />
<br /></p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">b</span>
<span class="p">}</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span>
</code></pre></div></div>

<p>이러한 일반적인 자바스크립트 코드는 백준에서 먹히지 않는다…
자바로 할때는 정말 간단했는데 node.js로 백준에서 입출력하기가 좀 그렇다…</p>

<p>백준에서 node.js 입출력 방법은 크게 1. fs 모듈   2. readline 모듈 두가지가 있는데
오늘은 비교적 코드가 간단한 fs모듈을 이용한 입출력 방법을 알아볼거다.</p>

<h2 id="fs-모듈">fs 모듈</h2>

<p><strong>fs 모듈은 FileSystem의 약자로 파일처리와 관련된 모듈이다.</strong></p>

<ul>
  <li>
    <h3 id="readfile">readFile()</h3>
    <blockquote>
      <p><strong>fs.readFile(filename, [options], callback)</strong></p>
    </blockquote>
  </li>
</ul>

<p>filename의 파일을 [options]의 방식으로 읽은 후 callback으로 전달된 함수를 호출한다. (비동기적)</p>

<ul>
  <li>
    <h3 id="readfilesync">readFileSync()</h3>
    <blockquote>
      <p><strong>fs.readFileSync(filename, [options])</strong></p>
    </blockquote>
  </li>
</ul>

<p>filename의 파일을 [options]의 방식으로 읽은 후 문자열을 반환한다. (동기적)</p>

<ul>
  <li>[options]에는 보통 인코딩 방식이 오게 되며 웹에서는 utf8을 주로 사용한다.</li>
  <li>어차피 입력을 다 받아야만 계산을 진행할 수 있으므로, 동기적 처리 방식이 코드도 간결하고 이해하기 편하다.</li>
</ul>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//파일을 읽어오기 위해 Node.js의 built-in file system module인 fs를 썼다.</span>
<span class="kd">var</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">fs</span><span class="dl">'</span><span class="p">);</span>
 
<span class="c1">// input을 읽어와서 변수로 선언&amp;할당한다.</span>
<span class="c1">// fs 모듈을 써서 경로(여기서는 '/dev/stdin')에 있는 파일을 동기적으로 읽어와서</span>
<span class="c1">// 그 내용을 input에 저장한다. toString().split(" ")에서 유추할 수 있는 것 처럼</span>
<span class="c1">// 읽어온 내용은 array로 저장이 된다.</span>
<span class="kd">var</span> <span class="nx">input</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="dl">'</span><span class="s1">/dev/stdin</span><span class="dl">'</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="p">);</span>
 
<span class="c1">// input에서 지정한 벨류를 읽어와서 별개의 변수로 선언하고 활용한다.</span>
<span class="c1">// input 변수에 저장한 각 입력값이 지금은 string이기 때문에</span>
<span class="c1">// 이것을 문제에서 요구하는 숫자로 쓸려면 parseInt로 형변환을 해주어야 한다.</span>
<span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">input</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
<span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">input</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
 
<span class="c1">// 사실상 여기서부터 구현부라고 보시면 되겠다.</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span>
</code></pre></div></div>
<hr />
<p>백준 문제를 vscode에서 테스트하고 제출하고싶어서 알아보니 readline이 용이하다고 한다. <br />
하지만 난 fs모듈을 사용하고 싶었고 아래 주소 블로그를 통해 fs모듈을 사용해도 vscode에서 테스트 할 수 있는 방법을 발견해 테스트하면서 문제를 풀었다.
<a href="https://nyang-in.tistory.com/156">https://nyang-in.tistory.com/156</a></p>

<p><br />
<br />
<br /></p>

<blockquote>
  <p><strong>Reference</strong> <br />
본 포스팅은 아래 사이트를 참조 및 인용하여 개인공부 용도로 작성되었습니다. <br />
잘못된 내용 피드백 주시면 반영하겠습니다. 감사합니다. <br />
<a href="https://nyang-in.tistory.com/156">https://nyang-in.tistory.com/156</a> <br />
<a href="https://velog.io/@two_jay/Node.js로-백준-문제를-풀어보자">https://velog.io/@two_jay/Node.js로-백준-문제를-풀어보자</a></p>
</blockquote>
:ET