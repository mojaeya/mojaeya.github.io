I"$<<h4 id="-java--2차원-배열의-선언">[ JAVA ] 2차원 배열의 선언</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>int [][] array; // 2차원 배열의 선언

array = new int[1][5];   // 2차원 배열의 초기화
</code></pre></div></div>

<h4 id="but-자바스크립트의-2차원-배열이란"><strong><font color="red">but</font></strong> 자바스크립트의 2차원 배열이란?</h4>

<ul>
  <li>자바스크립트는 기본적으로 2차원 배열을 지원하지 않는다</li>
  <li>const arr = [][] 이와 같은 2차원 배열 선언이 불가능하다.</li>
  <li>약간의 트릭을 이용하여 2차원 배열과 비슷한 배열을 만들 뿐이다. (배열안에 배열을 넣는 방식)</li>
</ul>

<h4 id="-javascript--2차원-배열의-선언">[ JavaScript ] 2차원 배열의 선언</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// arr[5][2]    // 초기값을 할당하여 배열 생성</span>
<span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">a</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">b</span><span class="dl">"</span><span class="p">],</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">c</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">d</span><span class="dl">"</span><span class="p">],</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">e</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">f</span><span class="dl">"</span><span class="p">],</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">g</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">h</span><span class="dl">"</span><span class="p">],</span>
  <span class="p">[</span><span class="dl">"</span><span class="s2">i</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">j</span><span class="dl">"</span><span class="p">],</span>
<span class="p">];</span>

<span class="c1">// arr[5][2]    // 반복문을 사용하여 빈 배열 생성</span>
<span class="kd">let</span> <span class="nx">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>

<span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />

<h2 id="다차원-배열--2차원-배열-이상-">다차원 배열  ( 2차원 배열 이상 )</h2>

<p>다차원 배열은 배열 내부의 요소로 배열을 추가하면 된다 = 배열의 요소로 다른 배열이 들어가는 것</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">num</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="p">[</span><span class="dl">"</span><span class="s2">가</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">나</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">다</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">라</span><span class="dl">"</span><span class="p">],</span> <span class="dl">"</span><span class="s2">a</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">b</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">c</span><span class="dl">"</span><span class="p">];</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span> <span class="c1">//  20</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span> <span class="c1">//  ['가','나','다','라']</span>
<span class="c1">// 배열 num의 2번째의 인덱스는 ['가','나','다','라'] 라는 '배열'이 '값'으로 나온다.</span>
<span class="c1">// 해당 배열의 인덱스에도 접근이 가능하다.</span>

<span class="c1">// 두번째 배열의 인덱스 값은 '배열'이 아닌 '요소'가 출력된다.</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">num</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">0</span><span class="p">]);</span> <span class="c1">//  가</span>
</code></pre></div></div>

<p>첫번째 배열 ‘num’의 인덱스 값 [2]를 넣으면 [‘가’,’나’,’다’,’라’] 배열이 나오고,</p>

<p>첫번째 배열의 인덱스 값 옆에 두번째 배열의 인덱스 값[0]을 넣으면,</p>

<p>두번째 배열 [‘가’,’나’,’다’,’라’]의 0번째 인덱스 값인 ‘가’ 출력.</p>

<p><em>=&gt; 이 때 출력된 인덱스 값은 배열이 아닌 ‘가’라는 요소로 나온다. 이를 <code class="language-plaintext highlighter-rouge">다차원 배열, 중첩된 배열</code> 이라고 한다</em></p>

<hr />

<p><em><strong>유사배열을 알아보기 전에!</strong></em></p>

<p><strong>자바스크립트에서 배열이란?</strong>  곧 Array 타입의 객체를 말한다. Array 타입의 객체는 다음과 같은 성질이 있다.</p>

<ul>
  <li>0 이상의 정수 값을 프로퍼티 이름으로 갖는다</li>
  <li>length 프로퍼티가 있으며, 요소를 추가하거나 삭제하면 length 프로터티 값이 바뀐다. 또한 length 프로퍼티 값을 줄이면 그에 따라 배열 크기가 줄어든다.</li>
  <li>프로토타입이 Array.prototype 이므로 Array.prototype의 메서드를 상속 받아서 사용할 수 있다. 또한 instanceof 연산자로 평가하면 Array 생성자 함수로 생성된 객체로 표시된다.</li>
</ul>

<hr />

<h2 id="유사배열">유사배열</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">array</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
<span class="nx">array</span><span class="p">;</span> <span class="c1">// [1, 2, 3]</span>

<span class="c1">// nodes와 els는 프론트엔드 개발하면 많이 접하는 친구들이라는데 난 아직 모르겠다.</span>
<span class="kd">let</span> <span class="nx">nodes</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">);</span> <span class="c1">// NodeList [div, div, div, div, div, ...]</span>
<span class="kd">let</span> <span class="nx">els</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">children</span><span class="p">;</span> <span class="c1">// HTMLCollection [noscript, link, div, script, ...]</span>
</code></pre></div></div>

<p>위 예제에서 array는 배열이고, nodes와 els는 유사배열이다. 다 []로 감싸져 있어서 겉만 봐서는 구분하기가 힘들다</p>

<p>배열인지 판단해주는 Array.isArray 메서드를 사용해보면,</p>

<p>Array.isArray(array)   // true    =&gt; 직접 배열 리터럴로 선언한 array만 배열이다. // 비슷한 확인 방법 : array instanceof Array Array.isArray(nodes) // false</p>

<p>Array.isArray(els)       // false</p>

<p><strong>유사배열은 배열처럼 보이지만 사실 배열의 성질 중 프로퍼티 이름 즉, key가 숫자(0이상의 정수)이고 length 프로퍼티를 가지고 있는 객체를 말한다.</strong></p>

<p>( 참고로 string도 유사배열이다. length property를 가지며, 0부터 index로 접근할 수 있기 때문이다. )</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">ArrayLikeObject</span> <span class="o">=</span> <span class="p">{</span>
  <span class="mi">0</span><span class="p">:</span> <span class="dl">"</span><span class="s2">a</span><span class="dl">"</span><span class="p">,</span>
  <span class="mi">1</span><span class="p">:</span> <span class="dl">"</span><span class="s2">b</span><span class="dl">"</span><span class="p">,</span>
  <span class="mi">2</span><span class="p">:</span> <span class="dl">"</span><span class="s2">c</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">length</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
<span class="p">};</span>
</code></pre></div></div>

<p>위에 코드에 나온 객체가 <strong>유사 배열</strong>이다. 그래서 <strong>유사배열 객체</strong>라고도 부른다. ( key가 숫자고, length라는 프로퍼티도 가지고 있다. )</p>

<p>사실 배열도 객체라는 성질을 이용한 트릭이기 때문에 배열처럼 유사배열도</p>

<p>ArrayLikeObject[0], ArrayLikeObject[1], ArrayLikeObject.length 같은 것을 모두 사용 가능하다.</p>

<p><strong>but</strong> 배열과 유사배열을 구분해야 하는 이유!  =&gt; <strong>유사배열은 배열의 메서드(Array.prototype의 메서드)를 사용 못한다.</strong></p>

<p>그런데 유사배열도 배열의 메서드를 빌려 쓰는 방법이 있긴 하다.</p>

<p>바로 Function.prototype.<strong>call 메서드</strong>로 간접 호출하면 사용 가능하다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">:</span> <span class="dl">"</span><span class="s2">A</span><span class="dl">"</span><span class="p">,</span> <span class="mi">1</span><span class="p">:</span> <span class="dl">"</span><span class="s2">B</span><span class="dl">"</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span> <span class="dl">"</span><span class="s2">C</span><span class="dl">"</span><span class="p">,</span> <span class="na">length</span><span class="p">:</span> <span class="mi">3</span> <span class="p">};</span>

<span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="dl">"</span><span class="s2">D</span><span class="dl">"</span><span class="p">);</span>
<span class="c1">// object {0: 'A', 1: 'B', 2: 'C', 3: 'D', length: 4}</span>

<span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">//</span>
<span class="c1">// ['A', 'B', 'C', 'D'] =&gt; 진짜 배열로 변환해서 반환</span>
</code></pre></div></div>

<h4 id="es6-부터는-arrayfrom-메서드로도-가능하다"><strong>ES6 부터는 Array.from() 메서드로도 가능하다.</strong></h4>

<blockquote>
  <p>**Array.from() 메서드는 유사 배열 객체(array-like object)나 반복 가능한 객체(iterable object)를 얕게 복사해<br />
새로운Array 객체를 만든다.<br />
**</p>
</blockquote>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="na">length</span><span class="p">:</span> <span class="mi">3</span> <span class="p">};</span>

<span class="nb">Array</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">v</span> <span class="o">*</span> <span class="nx">v</span><span class="p">;</span>
<span class="p">});</span> <span class="c1">// [1, 4, 9]</span>
</code></pre></div></div>

<hr />

<h2 id="그럼-유사배열을-사용하는-이유는">그럼 유사배열을 사용하는 이유는?</h2>

<p>어떤 함수에서 실행 결과로 배열값을 돌려주고 싶을때, 원래의 배열 객체가 가지고 있는 기능(함수)를 제공하고 싶지 않거나,</p>

<p>원래의 배열 객체에 없는 기능을 제공하고 싶을때 유사배열을 사용한다.</p>

<p>즉 원래의 Array 와 다른 배열을 사용하고 싶을때 유사배열을 이용하는 것이다.</p>

<p><em>[]로 감싸져 있다고 다 같은 배열이 아니라는거 명심하자!</em></p>

<p><br />
<br />
<br /></p>

<blockquote>
  <p><strong>Reference</strong><br />
본 포스팅은 아래 사이트를 참조 및 인용하여 개인공부 용도로 작성되었습니다.<br />
잘못된 내용 피드백 주시면 반영하겠습니다. 감사합니다.<br />
<a href="https://www.zerocho.com/category/JavaScript/post/5af6f9e707d77a001bb579d2">https://www.zerocho.com/category/JavaScript/post/5af6f9e707d77a001bb579d2</a><br />
<a href="https://gent.tistory.com/296">https://gent.tistory.com/296</a></p>
</blockquote>
:ET