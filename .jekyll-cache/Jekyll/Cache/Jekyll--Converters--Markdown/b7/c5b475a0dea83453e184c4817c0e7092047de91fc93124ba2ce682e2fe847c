I"
<p><br /></p>
<p align="center"><img width="80%" src="https://user-images.githubusercontent.com/76654131/140478776-b7d9cf49-3bf1-42bc-a7d3-95713b688a18.png" /></p>

<h2 id="통신-모델">통신 모델</h2>
<p>위의 그림을 보면 뭔진 모르겠지만 종류별로 계층이 나눠져 표현되어 있다. <br />
여기서 계층이란 개념은 통신 하는 절차를 순서대로 각각의 역할대로 나타내주는 부분으로 일단 이해하면 된다. <br />
이렇게 통신을 하려면 무엇을 해야 한다라는 개념을 계층별로 나눠서 설명하는 모델이 OSI 7 Layer 와 TCP/IP 이다.</p>

<p>그럼 이 두가지 통신모델들이 통신 절차를 표현한다는것을 딱딱한 표만 봐서는 이해가 잘 안가니 그림을 통해 쉽게 이해해보자.</p>

<h2 id="그림으로-이해하는-통신-절차-표현">그림으로 이해하는 통신 절차 표현</h2>
<p align="center"><img width="90%" src="https://user-images.githubusercontent.com/76654131/140469034-15c409c9-e034-41a9-8cef-2aee1d7cfcd4.png" /></p>

<p>위에 그림은 서울에 있는 친구가 부산에 있는 친구에게 보낸 ‘야’라고 적힌 편지가 도착하는 과정을 자세하게 보여주고 있다.</p>

<p>여기까지는 누구나 알고 있는 과정이다. 근데 통신 관점으로 자세히 보면 여기에 계층, 즉 절차가 있다. <br />
일단 처음 서울에서 편지를 만드는 곳, 마지막 절차에서는 편지를 확인하는 곳 두가지를 봐보자. <br />
이 개념이 친구끼리 서로 통신하기 위해 만나는 지점 역할을 하는 부분이다. <br />
이 부분을 TCP/IP에서 Application = 응용계층 이라고 한다.</p>

<p>쉽게 생각해서 카카오톡 같은 하나의 프로그램이라고 봐도 무방하다. 우리는 카카오톡으로 데이터를 만들기도,보내기도 하고 확인도 하기 때문이다.</p>

<p>그런데 지금까지는 어플리케이션만 사용해도 되니 굳이 나같은 일반인들은 그 이하의 과정인 주소를 적느니, 우체국이니, 일반으로 보낼지 등기로 보낼지 등의 중간 중간 데이터가 전달되는 개념을 생각하지 않아도 됐다.</p>

<p>그래서 이번 포스팅에서는 그 이하 일련의 과정들을 생각해보자는게 취지다.</p>

<hr />

<p align="center"><img width="90%" src="https://user-images.githubusercontent.com/76654131/140473257-a3daf279-01ec-415f-9a63-78359becca82.png" />
</p>

<p>그 다음 계층으로는 Presentation, Session 계층이 있는데 이부분은 이해하기가 좀 어렵다. <br />
Presentation은 뭔가를 표현하는 계층이고, Session은 통신하고자하는 친구끼리의 논리적 연결이라고 부르는데, 카톡으로 치면 카톡 친구로 등록이 되어 있어야 메세지를 보낼 수 있다. 뭐 대충 이런 개념인데 어렵기 때문에 나중에 자세하게 다루겠다. 일단 이렇구나 하고 넘어가자.</p>

<p>OSI 7 Layer 에서는 계층이 7,6,5 세개로 나누어져 있지만, <br />
TCP/IP에서는 그림과 같이 세 계층을 묶어서 그 전체를 Application 이라고 한다.</p>

<hr />

<p align="center"><img width="90%" src="https://user-images.githubusercontent.com/76654131/140473416-9c53ff87-f22e-4f34-8b37-740906dac8cd.png" /></p>

<p>그 다음을 보면 보내는 사람, 받는 사람의 주소의 개념이 보이고 보낼 때도 확인하고 받을 때도 확인을 하고 있다. <br />
이러한 역할을 Network 3계층 에서 한다. 5계층 다음에 3계층이 나와서 헷갈릴 수도 있는데 쉬운 이해를 위해 현실을 이야기 하고 있기 때문에 그림상 그런거고 실제 네트워크 통신에서는 IP주소를 표현하는 Network 계층보다 뒤에 나올 계층이 먼저 나온다.</p>

<hr />

<p align="center"><img width="90%" src="https://user-images.githubusercontent.com/76654131/140473490-584b20a1-8b9d-4cb0-a895-c6bbe135bc9a.png" /></p>

<p>편지를 보낼 때 일반이냐 등기우편이냐에 따라 도착지 우체통에 꽂힐수도, 기사님에게 직접 서명을 받고 받아야 할 수도 있다. <br />
이러한 역할을 Transport 4계층에서 한다.</p>

<hr />

<p align="center"><img width="90%" src="https://user-images.githubusercontent.com/76654131/140476138-40448bf7-aa05-4f7a-b079-bf3b691654d8.png" /></p>

<p>그리고 밑에를 보면 주황색 박스칸으로 편지가 거쳐가는 중간 우체국들을 표시해놨다.</p>

<p>우체국에서 다른 우체국 사이 사이 마다 전송되는 형태, 즉 그림에서는 도로와 바다와 같은 환경에 따라 편지를 포장하는(운반하는)방식이 달랐다. <br />
이런식으로 각 지점으로의 이동 개념을 구간마다 표현주고 있는 것이 Data Link 2계층이다.</p>

<p>여기서 A우체국에서 B우체국으로 이 개념은 통신으로 보면 A네트워크 장비에서 B네크워크 장비로 같은 것이다. <br />
(내 PC =&gt; 공유기 =&gt; 외부에 연결된 라우터 =&gt; 다른 지역의 라우터 =&gt;  목적지의 공유기 =&gt; 상대방 PC)</p>

<p>마지막으로 Physical 1계층은 장비들이 실제로 연결되어서 데이터가 전송되는지 확인하는 물리적 개념이다.</p>

<hr />

<h3 id="좀-복잡할수도-있지만-간단하게-다시-정리하면서-각-계층별로-무슨일을-하나-보자">좀 복잡할수도 있지만 간단하게 다시 정리하면서 각 계층별로 무슨일을 하나 보자.</h3>

<ol>
  <li>서울에서 부산에 있는 친구에게 편지를 보내기로 했다.</li>
  <li>그럼 제일 처음에 네트워크에서는 <strong>Application 7계층</strong>과 접점이 이루어진다.</li>
  <li>이때 데이터를 표현하는 방식 <strong>(Presentation 6계층)</strong>, 누구에게 데이터를 보낼지 개념을 준비하는것 <strong>(Session 5계층)</strong>이 있는데 <mark style="background-color: #dcffe4">TCP/IP에서는 이런것들이 합쳐져서 Application 계층에서 진행된다.</mark></li>
  <li>우리는 일반적으로 TCP/IP에서 Application이라고 칭하는 계층까지만 가지고 네트워크 통신에 참여하고 있었다. (내가 ‘야’라는 편지를 친구에게 보낸다는 개념까지만) 그래서 그 이하의 과정을 이해하고자 하는게 이번 포스팅의 취지다.</li>
  <li>그 다음 내가 전송을 한 뒤부터는 일반우편으로 갈지 등기우편으로 갈지 정하고 <strong>(Transport 4계층)</strong>,</li>
  <li>누구네 주소(장비 ip)에서 누구네 주소(장비ip)로 갈지 정하고 <strong>(Network 3계층)</strong>,</li>
  <li>거기로 가려면 어떤 식으로 포장(운반)해야 하는지 준비하고 <strong>(Data Link 2계층)</strong>,</li>
  <li>실제로 전송 <strong>(Physical 1계층)</strong>.</li>
</ol>

<hr />

<h2 id="마무리">마무리</h2>
<p align="center">&lt;img width="90%"src="https://user-images.githubusercontent.com/76654131/140378415-da097cd2-b151-43e6-8cc7-454d60113e28.png"&gt;</p>

<p align="center"><img width="80%" src="https://user-images.githubusercontent.com/76654131/140478776-b7d9cf49-3bf1-42bc-a7d3-95713b688a18.png" /></p>

<p>다시 처음에 봤었던 표를 보면</p>

<p><br />
<br />
<br /></p>

<blockquote>
  <p><strong>Reference</strong> <br />
본 포스팅은 아래 사이트를 참조 및 인용하여 개인공부 용도로 작성되었습니다. <br />
잘못된 내용 피드백 주시면 반영하겠습니다. 감사합니다. <br />
<a href="https://www.youtube.com/watch?v=f4u1fKaZ4Jo">https://www.youtube.com/watch?v=f4u1fKaZ4Jo</a></p>
</blockquote>
:ET